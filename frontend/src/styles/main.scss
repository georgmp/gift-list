
//===================================
// VARIABLES
//===================================
// having problems with sass compiler, need to investigate

//Fonts
@import url('https://fonts.googleapis.com/css?family=Charmonman|Roboto|Lobster+Two&display=swap');
//Brand name and h1s only
$font-title: 'Lobster+Two', cursive;
$font: 'Roboto', sans-serif;

$brand-dark: #358270;
$brand-light: #4AB59A;

//used for hero images, coloured boxes/borders
$background: #4AB59A;

//used when we want to color a title something other than the text color
$title: #358270;

//standard for all text
//thoughts on this being v.dark grey / v.light white
$text: #000000;
$text-inverted: #ffffff;

//used for placeholders and supporting text
$light-text: #686868;

//link text, for when we want to color a link something other than the text color
$link: #358270;
$link-hover: #4AB59A;

//used for forms
$error: #b63c5a;

//buttons
$button:  #358270;
$button-hover: #4AB59A;
$button-secondary: #686868;
$button-link: 290486px; /* replicating bulma's is-rounded class which won't work on this element via html */


//Logo - colours used in the logo only
$logo-purple: #654AB5;
$logo-red: #B54A65;
$logo-green: #9BB54A;


.hide {
  display: none;
}


//===================================
// TESTING
//===================================


// .section {
//   // background-color: green;
// }
// .container {
//   border: 1px solid red;
// }
// .navbar {
//   background-color: purple;
// }
// .breadcrumb-container {
//   background-color: blue;
// }





//===================================
// LAYOUT
//===================================
* {
  box-sizing: border-box; 
}
.hero{
  background-color: $background;
}
.container {
  padding: 20px; /*setting hard pixels until can work out how to calc the icon offset properly */
}

// Dashboard Page
.lists{
  border-left: 3px solid $link-hover;
  color:$text;
  margin: 0.5em 0;
  background-color: white;
  .column{
    margin: 0.5em;
  }
}
.lists:hover{
  background-color: $link-hover;
}

.card {
  // height: 18rem;
  position: relative;
}
.card {

  .interactive-icon {
  font-size: 2.5rem;
  position: absolute;
  top: -5%;
  left: 95%;
  z-index: 2;
  line-height: 0;
  }

  .background-icon {
    color: white;
    z-index: 1;
    font-size: 2rem;
    margin-top: 1%;
  }
}
.suggested-gifts{
  margin-top: 1rem;
}




//===================================
// TEXT & LINKS
//===================================

.edit {
  color: red;
}

.hero h1 {
  font-size: 7rem;
  font-family: $font-title;
  color: white;
  text-shadow: 5px 5px 10px rgba(0,0,0,0.5);
}
h1 {
  font-size: 2rem;
  font-family: $font-title;
}
h2 {
  font-size: 1.5rem;
}
h3 { /*list page*/
  font-size: 1.25rem;
  border-bottom: 1px solid $brand-light;
  margin-bottom: 0.5rem;
  padding-top: 0.5rem;
}



.breadcrumbs{
  display: flex;
  flex-direction: row;
  li {
    margin: 0.5em;
  }
  a {
    color: $link;
  }
  a:hover {
    color: $link-hover;
  }
}

.interactive-icon {
  font-size: 1rem;
  color: $link;
  margin-right: 5px; /*setting hard pixels until can work out how to calc it properly */
  margin-left: -25px; /* being .container padding + margin-right above */
}


.clickable {
  color: $link;
  cursor: pointer;
}
.clickable:hover {
  color: $link-hover;
}
.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.truncate-card{
  display: block;
  white-space: wrap;
  overflow: hidden;
  text-overflow: ellipsis;
  // max-width: 8rem;
  height: 5rem;
}
// .card-content{
//   height: 5rem
// }



//===================================
// FORM & BUTTONS
//===================================

.form {
  margin: 1.5rem 0;
  width: 75%;
}

input[type='checkbox'] {
  margin-right: 5px;
}
input[name='budget'] {
  max-width: 25%;
}

.has-static-text input {
  padding-left: 3.5rem; /* should refactor to calc this based on static text length */
}
.has-static-text {
	position:relative;
}
.has-static-text input {
  padding-left: 3.5rem; /* should refactor to calc this based on static text length */
}
.static-text {
	position:absolute;
  left: 0.5rem;
  top: 0.5rem;
	font-weight:bold;
}

.button {
  background-color: $button;
  color:$text-inverted;
  font-family: $font;
  font-weight: bold;
  letter-spacing: 0.05em;
}
.button.cancel {
  background-color: $button-secondary;
}
.button:hover, .button:active, .button:focus,
.navbar-item:hover a, .navbar-item:active a, .navbar-item:focus a,
.filter-option li:hover, .filter-option li:active, .filter-option li:focus
/* adding nav-bar & filter-options as all need same styling */
{
  background-color: $button-hover;
  border-radius: $button-link;
  color: $text;
}
.navbar-item a, .filter-option li {
  color: $text;
}


// .navbar-item {
//   color: $text;
//   font-family: $font;
// }
// .navbar-item{
//   a:focus {
//     background-color: $button-hover;
//     color: $text;
//     border-radius: $button-link;
//    }
// }
// .navbar-item:hover{
//   a {
//     background-color: $button-hover;
//     color: $text;
//     border-radius: $button-link;
//   }
// }

/* for category section */
.filter-option {
  display: flex;
}
.filter-option li {
  max-width: 20%;
  margin: 0.5rem 10px 0 0;
  padding: 0.2rem 0.5rem;
  border: 1px solid $button;
  border-radius: $button-link;
}


//===================================
// SWITCH ITERACTION
//===================================

/*turn checkbox into a switch*/

//===================================
// LOGO
//===================================

//PRESENT: BOX STRUCTURE
.present {
  display: flex;
  flex-wrap: wrap;
}
.logo-box {
  width: 50%;
  height: 50%;
}

//PRESENT: SIZE  
//::HOMEPAGE base size is 50px
.present.square { width: calc(1 * 50px); height: calc(1 * 50px)  }
.present.tall { width: calc(1 * 50px); height: calc(1.5 * 50px)  }
.present.wide { width: calc(1.5 * 50px); height: calc(0.7 * 50px)  }
//::NAVBAR base size is 20px
.navbar-item {
  .present.square { width: calc(1 * 20px;); height: calc(1 * 20px;)  }
  .present.tall { width: calc(1 * 20px;); height: calc(1.5 * 20px;)  }
  .present.wide { width: calc(1.2 * 20px;); height: calc(0.7 * 20px;)  }
}

//PRESENT: POSITIONING
.logo {
  display: flex;
  flex-direction: row;
  align-items: flex-end;
}
//::HOMEPAGE
.present.square { z-index: 3; }
.present.tall { z-index: 1; margin-left: calc(-0.4 * 50px); }
.present.wide { z-index: 2; margin-left: calc(-0.8 * 50px); }
//::NAVBAR
.navbar-item {
  .present.square { z-index: 3; }
  .present.tall { z-index: 1; margin-left: calc(-0.4 * 20px); }
  .present.wide { z-index: 2; margin-left: calc(-0.8 * 20px); }
}

//PRESENT: ANIMATIONS
.present.square { animation: bounce ease 5s infinite; }
.present.tall { animation: bounce2 ease 5s infinite; }
.present.wide { animation: bounce3 ease 5s infinite; }

//PRESENT: RIBBONS
//outside border
.present.square { border: 1px solid $logo-purple; }
.present.tall { border: 1px solid $logo-red; }
.present.wide { border: 1px solid $logo-green; }

//::HOMEPAGE
//vertical line: boxes 1 and 3 border right
.present .logo-box:nth-child(odd) { border-right-width: calc((0.1 * 50px)); border-right-style: solid; }
.present.square .logo-box:nth-child(odd) { border-right-color: $logo-purple; }
.present.tall .logo-box:nth-child(odd) { border-right-color: $logo-red; }
.present.wide .logo-box:nth-child(odd) { border-right-color: $logo-green; }
//vertical line: boxes 2 and 4 border left
.present .logo-box:nth-child(even) { border-left-width: calc((0.1 * 50px)); border-left-style: solid; }
.present.square .logo-box:nth-child(even) { border-left-color: $logo-purple; }
.present.tall .logo-box:nth-child(even) { border-left-color: $logo-red; }
.present.wide .logo-box:nth-child(even) { border-left-color: $logo-green; }
//horizontal line: boxes 1 and 2 border bottom
.present .logo-box:nth-child(1), .present .logo-box:nth-child(2) { border-bottom-width: calc((0.1 * 50px)); border-bottom-style: solid;  background-color: white; }
.present.square .logo-box:nth-child(1), .present.square .logo-box:nth-child(2) { border-bottom-color: $logo-purple; }
.present.tall .logo-box:nth-child(1), .present.tall .logo-box:nth-child(2) { border-bottom-color: $logo-red; }
.present.wide .logo-box:nth-child(1), .present.wide .logo-box:nth-child(2) { border-bottom-color: $logo-green; }
//horizontal line: boxes 3 and 4 border top
.present .logo-box:nth-child(3), .present .logo-box:nth-child(4) { border-top-width: calc((0.1 * 50px)); border-top-style: solid; }
.present.square .logo-box:nth-child(3), .present.square .logo-box:nth-child(4) { border-top-color: $logo-purple; background-image: linear-gradient(white, $logo-purple)}
.present.tall .logo-box:nth-child(3), .present.tall .logo-box:nth-child(4) { border-top-color: $logo-red; background-image: linear-gradient(white, $logo-red)}
.present.wide .logo-box:nth-child(3), .present.wide .logo-box:nth-child(4) { border-top-color: $logo-green; background-image: linear-gradient(white, $logo-green)}

//::NAVBAR
//vertical line: boxes 1 and 3 border right
.present .logo-box:nth-child(odd) { border-right-width: calc((0.1 * 50px)); border-right-style: solid; }
.present.square .logo-box:nth-child(odd) { border-right-color: $logo-purple; }
.present.tall .logo-box:nth-child(odd) { border-right-color: $logo-red; }
.present.wide .logo-box:nth-child(odd) { border-right-color: $logo-green; }
//vertical line: boxes 2 and 4 border left
.present .logo-box:nth-child(even) { border-left-width: calc((0.1 * 50px)); border-left-style: solid; }
.present.square .logo-box:nth-child(even) { border-left-color: $logo-purple; }
.present.tall .logo-box:nth-child(even) { border-left-color: $logo-red; }
.present.wide .logo-box:nth-child(even) { border-left-color: $logo-green; }
//horizontal line: boxes 1 and 2 border bottom
.present .logo-box:nth-child(1), .present .logo-box:nth-child(2) { border-bottom-width: calc((0.1 * 50px)); border-bottom-style: solid;  background-color: white; }
.present.square .logo-box:nth-child(1), .present.square .logo-box:nth-child(2) { border-bottom-color: $logo-purple; }
.present.tall .logo-box:nth-child(1), .present.tall .logo-box:nth-child(2) { border-bottom-color: $logo-red; }
.present.wide .logo-box:nth-child(1), .present.wide .logo-box:nth-child(2) { border-bottom-color: $logo-green; }
//horizontal line: boxes 3 and 4 border top
.present .logo-box:nth-child(3), .present .logo-box:nth-child(4) { border-top-width: calc((0.1 * 50px)); border-top-style: solid; }
.present.square .logo-box:nth-child(3), .present.square .logo-box:nth-child(4) { border-top-color: $logo-purple; background-image: linear-gradient(white, $logo-purple)}
.present.tall .logo-box:nth-child(3), .present.tall .logo-box:nth-child(4) { border-top-color: $logo-red; background-image: linear-gradient(white, $logo-red)}
.present.wide .logo-box:nth-child(3), .present.wide .logo-box:nth-child(4) { border-top-color: $logo-green; background-image: linear-gradient(white, $logo-green)}



//===================================
// ANIMATION
//===================================

  @keyframes bounce {
    0%, 2%, 6%,  100% {
      transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      transform: translate3d(0,0,0);
    }
    4%, 5% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -30px, 0);
    }
    7% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -15px, 0);
    }
     9% { transform: translate3d(0,-4px,0);
    }
  } 

  @keyframes bounce2 {
    0%, 6%, 9%,  100% {
      transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      transform: translate3d(0,0,0);
    }
    7%, 8% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -30px, 0);
    }
    10% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -15px, 0);
    }
     11% { transform: translate3d(0,-4px,0);
    }
  } 

  @keyframes bounce3 {
    0%, 10%, 13%,  100% {
      transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      transform: translate3d(0,0,0);
    }
    11%, 12% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -30px, 0);
    }
    14% {
     transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
     transform: translate3d(0, -15px, 0);
    }
     15% { transform: translate3d(0,-4px,0);
    }
  } 
